#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import os
import subprocess
from copy import deepcopy

# Dictionary has the form    normal : pain in the arse version
# semi colon is Greek question mark
# colon if Ethiopic wordspace
# period is Ethiopic tonal mark yizet
# single apostrophe is Canadian Syllabics West-Cree etc. etc. etc
opDictionary = {';':';', ':':'፡', '.':'᎐', "'":"ᑊ", '-':'‒', '"':'“', "'":'‛', \
                '|':'⎹', '/':'∕', ')':'⟯', '(':'⟮', '+':'⧾'}

# Objective is to get as many different errors as possible, so change available
# letters on an alternate basis
charDictionary = {'A':'Α', 'B':'Β', 'E':'Ε', 'Z':'Ζ', 'H':'Η', 'I':'Ι', 'K':'Κ', \
                  'M':'Μ', 'N':'Ν', 'O':'Ο', 'P':'Ρ', 'T':'Τ', 'Y':'Υ', 'X':'Χ', \
                  'F':'Ϝ', 'c':'ϲ', 'j':'ϳ', 'C':'Ϲ', 'S':'Ѕ', 'J':'Ј', 'e':'е', \
                  'o':'о', 's':'ѕ', 'i':'і', 'h':'һ', 'd':'ԁ', 'q':'ԛ', 'w':'ԝ'}

EXE=[".cc", ".c", ".cpp", ".cxx", ".cu", ".c++", ".js", ".java", ".ii", \
".ixx", ".ipp", ".i++", ".inl", ".idl", ".ddl", ".odl", ".h", ".hh", ".hxx", ".hpp", ".h++", \
".cs", ".d", ".php", ".php4", ".php5", ".phtml", ".inc", ".m", ".md", ".mm", ".html", \
".dox", ".py", ".pyw", ".f90", ".f95", ".f03", ".f08", ".f", ".for", ".tcl", ".vhd", ".vhdl", \
".ucf", ".qsf"]

inputFile=0
FileList = []
if '-r' in sys.argv:
    mode='-r'
elif '-rf' in sys.argv:
    mode='-rf'
    subprocess.call(['mv', '.'+File, File])
    sys.exit(1)
else:
    mode='-f'
for arg in sys.argv:
    if (arg.find('.')>=0):
        if arg[-2:] in EXE or arg[-3:] in EXE or arg[-4:] in EXE or arg[-5:] in EXE:
            inputFile+=1
            FileList.append(arg)
if not inputFile:
    print("No valid input file.")
    sys.exit(1)

for File in FileList:
    subprocess.call(['cp', File, 'source.txt'])

    if mode == '-r':
        # Reverse mode, so swap keys and values
        useOpDict = dict([[v, k] for k, v in opDictionary.items()])
        useCharDict = dict([[v, k] for k, v in charDictionary.items()])
    else:
        useOpDict = opDictionary
        useCharDict = charDictionary

    # Keep track of which characters have been changed
    charUsed = deepcopy(useCharDict)
    for key in charUsed.keys():
        charUsed[key] = 0

    # OK, start messing with their file
    with open("source.txt", 'r') as fin:
        with open("target.txt", 'w') as fout:
            for line in fin.readlines():
                string = ''
                for char in line:
                    if char in useOpDict.keys():
                        # Character is one of the operators
                        string += useOpDict[char]
                    elif char in useCharDict.keys():
                        # Character is one of the chars to change
                        if mode == '-r':
                            # Always swap if in reverse mode
                            string += useCharDict[char]
                        elif charUsed[char]==1:
                            # Do not swap char this time
                            string += char
                            charUsed[char] = 0
                        elif charUsed[char]==0:
                            # Swap this time
                            string += useCharDict[char]
                            charUsed[char] = 1
                    else:
                        # Character is not in dictionaries so do not change
                        string += char
                # Place this line in the target file
                fout.write(string)

    direc = os.path.dirname(os.path.realpath(__file__))
    # print(direc)
    # subprocess.call(['ls', '-la', direc])
    subprocess.call(['mv', 'target.txt', File])
    if mode=='-f':
        subprocess.call(['mv', os.getcwd() + '/source.txt', '.' + File])

    # Fin.
